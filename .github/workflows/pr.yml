name: Check

on:
  pull_request:
    branches: ["*"]

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest
    container: node:18.6.0-alpine3.16
    timeout-minutes: 15
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install pnpm
        uses: pnpm/action-setup@v2.2.2
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Lint check
        run: pnpm run -r lint

      - name: Format with prettier
        run: pnpm run -r fmt:check

      - name: Unit Test (Backend)
        run: pnpm --filter "{packages/backend}" test
        env:
          NODE_ENV: test

      - name: Collect coverage (Backend)
        run: pnpm --filter "{packages/backend}" test:coverage
        env:
          NODE_ENV: test

      - name: E2E Test (Frontend)
        uses: cypress-io/github-action@v4.2.0
        with:
          install: false
          working-directory: ./src/packages/frontend/cypress/
          browser: chrome
          install-command: pnpm install
          build: pnpm --dir .. build
          start: pnpm --dir .. start
          wait-on: 'http://localhost:4173'

      - name: Send coverage report to Codecov
        uses: codecov/codecov-action@v2

      - name: Build frontend
        run: pnpm --filter "{packages/frontend}" build
        env:
          NODE_ENV: production
