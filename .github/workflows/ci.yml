name: Deploy

on:
  push:
    branches: ["master"]

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest
    container: node:20.10-bookworm
    timeout-minutes: 15
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          version: latest
          run_install: false

      - name: Install dependencies
        run: pnpm install

      - name: Lint check
        run: pnpm run -r lint

      - name: Format with prettier
        run: pnpm run -r fmt:check

      - name: Test
        run: pnpm --filter "{packages/backend}" test
        env:
          NODE_ENV: test

      - name: Collect coverage
        run: pnpm --filter "{packages/backend}" test:coverage
        env:
          NODE_ENV: test

      - name: Send coverage report to Codecov
        uses: codecov/codecov-action@v3

      - name: Build frontend
        run: pnpm --filter "{packages/frontend}" build
        env:
          NODE_ENV: production

  cd-build:
    name: CD - Build
    runs-on: ubuntu-latest
    timeout-minutes: 60
    needs:
      - ci
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/teknologi-umum/graphene
          flavor: |
            latest=false
          tags: |
            type=edge
            type=sha

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
